@model IEnumerable<CollegePortal.Entities.Models.TutorBookings>

<h1>Tutor Bookings</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Booking ID</th>
                <th>Student ID</th>
                <th>Tutor ID</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in Model)
            {
                <tr>
                    <td>@booking.bookingId</td>
                    <td>@booking.studentId</td>
                    <td>@booking.tutorId</td>
                    <td>@booking.startTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@booking.endTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>
                        <a asp-controller="Tutor" asp-action="Edit" asp-route-id="@booking.bookingId" class="btn btn-warning">Edit</a>
                        <form asp-controller="Tutor" asp-action="Delete" asp-route-id="@booking.bookingId" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No bookings available.</p>
}

<a asp-controller="Tutor" asp-action="Create" class="btn btn-primary">Add New Tutor Booking</a>
