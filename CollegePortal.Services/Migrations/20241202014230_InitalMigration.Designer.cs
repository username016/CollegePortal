// <auto-generated />
using System;
using CollegePortal.Services.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegePortal.Services.Migrations
{
    [DbContext(typeof(DbContextStudent))]
    [Migration("20241202014230_InitalMigration")]
    partial class InitalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CollegePortal.Entities.Models.GymRoomBookings", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("gymRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("studentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("studentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("bookingId");

                    b.HasIndex("studentId");

                    b.ToTable("GymRoomBookings");

                    b.HasData(
                        new
                        {
                            bookingId = 1,
                            endTime = new DateTime(2024, 12, 3, 3, 42, 29, 445, DateTimeKind.Local).AddTicks(2569),
                            gymRoomId = 1,
                            startTime = new DateTime(2024, 12, 3, 2, 42, 29, 437, DateTimeKind.Local).AddTicks(7160),
                            studentId = 1,
                            studentName = "John Doe"
                        },
                        new
                        {
                            bookingId = 2,
                            endTime = new DateTime(2024, 12, 4, 8, 42, 29, 445, DateTimeKind.Local).AddTicks(3126),
                            gymRoomId = 2,
                            startTime = new DateTime(2024, 12, 4, 7, 42, 29, 445, DateTimeKind.Local).AddTicks(3112),
                            studentId = 2,
                            studentName = "Jane Smith"
                        });
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.LostAndFound", b =>
                {
                    b.Property<int>("postId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("foundDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("itemDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("studentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("postId");

                    b.HasIndex("studentId");

                    b.ToTable("LostAndFound");

                    b.HasData(
                        new
                        {
                            postId = 1,
                            foundDate = new DateTime(2024, 11, 28, 17, 42, 29, 445, DateTimeKind.Local).AddTicks(8845),
                            itemDescription = "Blue Backpack",
                            location = "Library",
                            studentId = 1
                        },
                        new
                        {
                            postId = 2,
                            foundDate = new DateTime(2024, 11, 30, 17, 42, 29, 445, DateTimeKind.Local).AddTicks(9753),
                            itemDescription = "Laptop Charger",
                            location = "Student Center",
                            studentId = 2
                        });
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.Student", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("studentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            studentId = 1,
                            name = "John Doe",
                            password = "password123"
                        },
                        new
                        {
                            studentId = 2,
                            name = "Jane Smith",
                            password = "securepass"
                        },
                        new
                        {
                            studentId = 3,
                            name = "Mike Johnson",
                            password = "studentpass"
                        });
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.StudyRoomBookings", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("studentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("studyRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("bookingId");

                    b.HasIndex("studentId");

                    b.ToTable("StudyRoomBookings");

                    b.HasData(
                        new
                        {
                            bookingId = 1,
                            dateTime = new DateTime(2024, 12, 1, 17, 42, 29, 445, DateTimeKind.Local).AddTicks(5328),
                            endTime = new DateTime(2024, 12, 3, 5, 42, 29, 445, DateTimeKind.Local).AddTicks(6166),
                            startTime = new DateTime(2024, 12, 3, 3, 42, 29, 445, DateTimeKind.Local).AddTicks(5764),
                            studentId = 1,
                            studyRoomId = 1
                        },
                        new
                        {
                            bookingId = 2,
                            dateTime = new DateTime(2024, 12, 1, 17, 42, 29, 445, DateTimeKind.Local).AddTicks(6568),
                            endTime = new DateTime(2024, 12, 4, 8, 42, 29, 445, DateTimeKind.Local).AddTicks(6582),
                            startTime = new DateTime(2024, 12, 4, 6, 42, 29, 445, DateTimeKind.Local).AddTicks(6579),
                            studentId = 2,
                            studyRoomId = 2
                        });
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.TutorBookings", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("studentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tutorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("bookingId");

                    b.HasIndex("studentId");

                    b.ToTable("TutorBookings");

                    b.HasData(
                        new
                        {
                            bookingId = 1,
                            dateTime = new DateTime(2024, 12, 1, 17, 42, 29, 446, DateTimeKind.Local).AddTicks(1657),
                            endTime = new DateTime(2024, 12, 5, 4, 42, 29, 446, DateTimeKind.Local).AddTicks(2472),
                            startTime = new DateTime(2024, 12, 5, 3, 42, 29, 446, DateTimeKind.Local).AddTicks(2073),
                            studentId = 1,
                            tutorId = 101
                        },
                        new
                        {
                            bookingId = 2,
                            dateTime = new DateTime(2024, 12, 1, 17, 42, 29, 446, DateTimeKind.Local).AddTicks(2987),
                            endTime = new DateTime(2024, 12, 6, 8, 42, 29, 446, DateTimeKind.Local).AddTicks(3000),
                            startTime = new DateTime(2024, 12, 6, 7, 42, 29, 446, DateTimeKind.Local).AddTicks(2997),
                            studentId = 2,
                            tutorId = 102
                        });
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.GymRoomBookings", b =>
                {
                    b.HasOne("CollegePortal.Entities.Models.Student", "Student")
                        .WithMany("GymRoomBookings")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.LostAndFound", b =>
                {
                    b.HasOne("CollegePortal.Entities.Models.Student", "Student")
                        .WithMany("LostAndFoundPosts")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.StudyRoomBookings", b =>
                {
                    b.HasOne("CollegePortal.Entities.Models.Student", "Student")
                        .WithMany("StudyRoomBookings")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.TutorBookings", b =>
                {
                    b.HasOne("CollegePortal.Entities.Models.Student", "Student")
                        .WithMany("TutorBookings")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CollegePortal.Entities.Models.Student", b =>
                {
                    b.Navigation("GymRoomBookings");

                    b.Navigation("LostAndFoundPosts");

                    b.Navigation("StudyRoomBookings");

                    b.Navigation("TutorBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
